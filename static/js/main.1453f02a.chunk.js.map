{"version":3,"sources":["Components/GlobalStyles.js","Components/Themes.js","Components/useDarkMode.js","Components/Toggler.js","Components/Navbar.js","Components/Homepage.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","background","darkTheme","useDarkMode","useState","setTheme","useEffect","localTheme","window","localStorage","getItem","setMode","mode","setItem","Button","styled","button","Toggle","toggleTheme","onClick","icon","faCloudMoon","faSun","Navigation","ul","ListItem","li","Link","a","props","color","Navbar","themeToggler","themeMode","href","Toggler","Div","div","Homepage","style","fontSize","marginBottom","marginTop","src","alt","width","height","App","mountedComponent","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPACaA,EAAeC,YAAH,sLAEP,qBAAGC,MAAkBC,QAC1B,qBAAGD,MAAkBE,QCJrBC,EAAa,CACtBF,KAAM,OACNC,KAAM,UACNE,WAAY,WAEHC,EAAY,CACrBJ,KAAM,UACNC,KAAM,UACNE,WAAY,QCcDE,EApBK,WAClB,MAA0BC,mBAAS,QAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KAEAC,qBAAU,WACR,IAAMC,EAAaC,OAAOC,aAAaC,QAAQ,SAC/CH,GAAcF,EAASE,KACtB,IAEH,IAAMI,EAAU,SAACC,GACfJ,OAAOC,aAAaI,QAAQ,QAASD,GACrCP,EAASO,IAOX,MAAO,CAACf,EAJa,WACCc,EAAV,UAAVd,EAA4B,OAAkB,Y,sBCV5CiB,EAASC,IAAOC,OAAV,qNACI,qBAAGnB,MAAkBC,QAC1B,qBAAGD,MAAkBE,QAmBjBkB,EATA,SAAC,GAA4B,IAA1BpB,EAAyB,EAAzBA,MAAOqB,EAAkB,EAAlBA,YACrB,MACc,UAAVrB,EAAoB,cAACiB,EAAD,CAAQK,QAASD,EAAjB,SAA8B,cAAC,IAAD,CAAiBE,KAAMC,QAA2B,cAACP,EAAD,CAAQK,QAASD,EAAjB,SAA8B,cAAC,IAAD,CAAiBE,KAAME,SCZ3JC,EAAaR,IAAOS,GAAV,uIAOVC,EAAWV,IAAOW,GAAV,0BACRC,EAAOZ,IAAOa,EAAV,0KAKC,SAACC,GAAD,OAAWA,EAAMC,QACxBL,GAmDWM,EA9CA,WACb,MAA8B5B,IAA9B,mBAAON,EAAP,KAAcmC,EAAd,KACMC,EAAsB,UAAVpC,EAAoBG,EAAaE,EAGnD,OACE,cAAC,IAAD,CAAeL,MAAOoC,EAAtB,SACE,qCACE,cAACtC,EAAD,IACA,8BACE,eAAC4B,EAAD,WACE,cAACE,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAIJ,MAAK,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAWlC,KAAjC,sBAIF,cAAC0B,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAIJ,MAAK,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAWlC,KAAjC,uBAIF,cAAC0B,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAIJ,MAAK,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAWlC,KAAjC,2BAIF,cAAC0B,EAAD,UACE,cAACE,EAAD,CAAMO,KAAK,IAAIJ,MAAK,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAWlC,KAAjC,0BAIF,6BACE,cAACoC,EAAD,CAAStC,MAAOA,EAAOqB,YAAac,iBCvD5CI,G,MAAMrB,IAAOsB,IAAV,wJAwBMC,EAhBE,WACf,OACE,eAACF,EAAD,WACE,oBAAIG,MAAO,CAAEC,SAAU,OAAQC,aAAc,MAAOC,UAAW,OAA/D,0BAGA,qBACEC,IAAI,gCACJC,IAAI,mBACJC,MAAM,MACNC,OAAO,YCKAC,EAlBH,WACV,MAAkC5C,IAAlC,mBAAON,EAAP,KAAcmD,EAAd,KACMf,EAAsB,UAAVpC,EAAoBG,EAAaE,EAEnD,OAAK8C,EAEH,cAAC,IAAD,CAAenD,MAAOoC,EAAtB,SACE,qCACE,cAACtC,EAAD,IACA,sBAAKsD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,YAPsB,yBCRhCC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.1453f02a.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: all 1.0s linear;\n  }\n  `\n","export const lightTheme = {\n    body: '#FFF',\n    text: '#363537',\n    background: '#363537',\n}\nexport const darkTheme = {\n    body: '#212121',\n    text: '#FAFAFA',\n    background: '#999',\n\n}","import { useEffect, useState } from \"react\";\n\nconst useDarkMode = () => {\n  const [theme, setTheme] = useState(\"dark\");\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem(\"theme\");\n    localTheme && setTheme(localTheme);\n  }, []);\n\n  const setMode = (mode) => {\n    window.localStorage.setItem(\"theme\", mode);\n    setTheme(mode);\n  };\n\n  const themeToggler = () => {\n    theme === \"light\" ? setMode(\"dark\") : setMode(\"light\");\n  };\n\n  return [theme, themeToggler];\n};\n\nexport default useDarkMode;\n","import React from 'react'\nimport { func, string } from 'prop-types';\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudMoon, faSun } from '@fortawesome/free-solid-svg-icons'\n\nconst Button = styled.button`\n  background: ${({ theme }) => theme.body};\n  color: ${({ theme }) => theme.text};\n  outline: none;\n  font-size:1.5rem;\n  cursor: pointer;\n  display: block;\n  border: none;\n  transition: all 1.0s linear;\n  padding: .5em;\n  }\n`;\nconst Toggle = ({ theme, toggleTheme }) => {\n    return (\n        theme === 'light' ? <Button onClick={toggleTheme}><FontAwesomeIcon icon={faCloudMoon} /></Button> : <Button onClick={toggleTheme}><FontAwesomeIcon icon={faSun} /></Button>\n    );\n};\nToggle.propTypes = {\n    theme: string.isRequired,\n    toggleTheme: func.isRequired,\n}\nexport default Toggle;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./GlobalStyles\";\nimport { darkTheme, lightTheme } from \"./Themes\";\nimport Toggler from \"./Toggler\";\nimport useDarkMode from \"./useDarkMode\";\n\nconst Navigation = styled.ul`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-end;\n  list-style: none;\n  margin: 0;\n`;\nconst ListItem = styled.li``;\nconst Link = styled.a`\n  text-decoration: none;\n  display: block;\n  padding: 1em;\n  font-weight: bold;\n  color: ${(props) => props.color};\n  ${ListItem}:hover & {\n    color: #1565c0;\n  }\n`;\n\nconst Navbar = () => {\n  const [theme, themeToggler] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  // if (!mountedComponent) return <div />\n  return (\n    <ThemeProvider theme={themeMode}>\n      <>\n        <GlobalStyles />\n        <div>\n          <Navigation>\n            <ListItem>\n              <Link href=\"#\" color={themeMode?.text}>\n                .who()\n              </Link>\n            </ListItem>\n            <ListItem>\n              <Link href=\"#\" color={themeMode?.text}>\n                .work()\n              </Link>\n            </ListItem>\n            <ListItem>\n              <Link href=\"#\" color={themeMode?.text}>\n                .projects()\n              </Link>\n            </ListItem>\n            <ListItem>\n              <Link href=\"#\" color={themeMode?.text}>\n                .contact()\n              </Link>\n            </ListItem>\n            <li>\n              <Toggler theme={theme} toggleTheme={themeToggler} />\n            </li>\n          </Navigation>\n        </div>\n      </>\n    </ThemeProvider>\n  );\n};\n\n// Navbar.propTypes = {\n//     theme: string.isRequired,\n//     toggleTheme: func.isRequired,\n// }\n\nexport default Navbar;\n","import React from \"react\";\nimport \"../Styles/Homepage.css\";\nimport styled from \"styled-components\";\n\nconst Div = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  flex-direction: column;\n`;\n\nconst Homepage = () => {\n  return (\n    <Div>\n      <h1 style={{ fontSize: \"500%\", marginBottom: \"1em\", marginTop: \"0em\" }}>\n        Chris Rogers\n      </h1>\n      <img\n        src=\"under-construction90s-90s.gif\"\n        alt=\"Work in Progress\"\n        width=\"25%\"\n        height=\"25%\"\n      />\n    </Div>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\nimport \"./Styles/App.css\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./Components/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"./Components/Themes\";\nimport useDarkMode from \"./Components/useDarkMode\";\nimport Navbar from \"./Components/Navbar\";\nimport Homepage from \"./Components/Homepage\";\n\nconst App = () => {\n  const [theme, mountedComponent] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  if (!mountedComponent) return <div />;\n  return (\n    <ThemeProvider theme={themeMode}>\n      <>\n        <GlobalStyles />\n        <div className=\"App\">\n          <Navbar />\n          <Homepage />\n        </div>\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)"],"sourceRoot":""}